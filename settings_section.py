import os

from telegram import InlineKeyboardButton, InlineKeyboardMarkup, Update
from telegram.ext import ContextTypes

STATIC_SETTINGS_GUIDE_LINK = "https://docs.google.com/document/d/1jbLpnreexrBDGiHLfmGho1RgdU1iaxDQJFO2NAMYpG0/edit?tab=t.0#heading=h.396gwqj7im4s"

user_states = {}

# –ü–æ–∫–∞–∑ –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫
async def show_settings(update, context):
    user_id = update.message.from_user.id
    user_states[user_id] = "waiting_for_config_file"

    buttons = [
        [InlineKeyboardButton("üìÑ –ö–∞–∫ —Å–æ–∑–¥–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª?", url=STATIC_SETTINGS_GUIDE_LINK)],
        [InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="cancel")]
    ]

    await update.message.reply_text(
        "–ü—Ä–∏—à–ª–∏—Ç–µ —Ñ–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏–ª–∏ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–µ–π:",
        reply_markup=InlineKeyboardMarkup(buttons)
    )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–∏—Å–ª–∞–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
async def handle_document(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.message.from_user.id

    if user_states.get(user_id) != "waiting_for_config_file":
        return

    document = update.message.document
    if not document:
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∏–º–µ–Ω–Ω–æ —Ñ–∞–π–ª.")
        return

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª
    file = await context.bot.get_file(document.file_id)
    file_path = f"configs/{document.file_name}"
    await file.download_to_drive(file_path)

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–∞
    if validate_file(file_path):
        await update.message.reply_text(f"–§–∞–π–ª {document.file_name} —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω –∏ –ø—Ä–æ—à—ë–ª –ø—Ä–æ–≤–µ—Ä–∫—É ‚úÖ")
    else:
        os.remove(file_path)

        buttons = [
            [InlineKeyboardButton("üìÑ –ö–∞–∫ —Å–æ–∑–¥–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª?", url=STATIC_SETTINGS_GUIDE_LINK)],
            [InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="cancel")]
        ]

        await update.message.reply_text(
            "–§–∞–π–ª —Å–æ—Å—Ç–∞–≤–ª–µ–Ω –Ω–µ–≤–µ—Ä–Ω–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑:",
            reply_markup=InlineKeyboardMarkup(buttons)
        )

# –ü—Ä–æ—Å—Ç–µ–π—à–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ–Ω .json –∏ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å { )
def validate_file(file_path):
    if not file_path.endswith(".json"):
        return False

    try:
        with open(file_path, "r", encoding="utf-8") as f:
            content = f.read().strip()
            if content.startswith("{") and content.endswith("}"):
                return True
    except Exception:
        return False

    return False
